<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:c1="clr-namespace:FaPA.GUI.Design.Converters">

    <!--<converters1:StringMemberNameToVisibilityConverter x:Key="CustConverter" />-->
    <c1:StringToDataTemplateConverter x:Key="StringToDataTemplateConverter" />
    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <c1:BooleanToVisibilityConverter x:Key="BoolToOppositeVisibilityConverter" OppositeBooleanValue="True" />
    <c1:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    <c1:NullToVisibiltyConverter x:Key="NullToVisibiltyConverter"/>
    <c1:NullToInverseVisibiltyConverter x:Key="NullToInverseVisibiltyConverter"/>

    <Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="False" Background="{StaticResource GroubHeaderBackgroundBrush}" 
                              Foreground="{StaticResource DefaultControlForegroundBrush}">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="DarkBlue"  FontSize="12" VerticalAlignment="Bottom" />
                                <TextBlock Text="{Binding ItemCount}" FontSize="12" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" VerticalAlignment="Bottom" />
                                <TextBlock Text=" dettagli" FontSize="12" Foreground="DodgerBlue"  FontStyle="Italic" VerticalAlignment="Bottom" />
                            </StackPanel>
                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- GroupHeaderStyle -->
    <!--<Style x:Key="GroupHeaderStyle" TargetType="{x:Type GroupItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupItem}">
                    <Expander IsExpanded="False" 
                                      Background="{StaticResource GroubHeaderBackgroundBrush}"
                                      Foreground="{StaticResource DefaultControlForegroundBrush}">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Path=Name}" />
                                <TextBlock Text=" num.: "/>
                                <TextBlock Text="{Binding Path=ItemCount}"/>
                            </StackPanel>

                        </Expander.Header>
                        <ItemsPresenter />
                    </Expander>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    
    <Style TargetType="Image">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="WhiteSmoke" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <LinearGradientBrush x:Key="Brush_ToolBar" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#CDDCE5" Offset="0"/>
        <GradientStop Color="#FFFFFBFF" Offset="0.5"/>
        <GradientStop Color="#9692C2" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_HeaderBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#70A0F6" Offset="0"/>
        <GradientStop Color="#4E4EC4" Offset="0.0967"/>
        <GradientStop Color="#3F3FE4" Offset="0.2580"/>
        <GradientStop Color="#1313A2"  Offset="0.3870"/>
        <GradientStop Color="#1C55A4" Offset="0.9677"/>
        <GradientStop Color="#4079C7" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_HeaderBackgroundx2"  StartPoint="1,0">
        <GradientStop Color="#5EF2DA59" Offset="0"/>
        <GradientStop Color="#EFC71A" Offset="0.0967"/>
        <GradientStop Color="#F1CD32" Offset="0.2580"/>
        <GradientStop Color="Gold"  Offset="0.3870"/>
        <GradientStop Color="#F1CD32" Offset="0.9677"/>
        <GradientStop Color="#5EF2DA59" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_HeaderBackground21" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#70A0F6" Offset="0"/>
        <GradientStop Color="#4E4EC4" Offset="0.0967"/>
        <GradientStop Color="#3F3FE4" Offset="0.2580"/>
        <GradientStop Color="#FD0923E6"  Offset="0.3870"/>
        <GradientStop Color="#1C55A4" Offset="0.9677"/>
        <GradientStop Color="#4079C7" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_HeaderBackground2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#70A0F6" Offset="0"/>
        <GradientStop Color="Blue"  Offset="0.0967"/>
        <GradientStop Color="Blue" Offset="0.2580"/>
        <GradientStop Color="Blue"  Offset="0.3870"/>
        <GradientStop Color="#1C55A4" Offset="0.9677"/>
        <GradientStop Color="#4079C7" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="Brush_HeaderBackground22" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#70A0F6" Offset="0"/>
        <GradientStop Color="#FDCDD1EF" Offset="0.0967"/>
        <GradientStop Color="#FDCDD1EF" Offset="0.2580"/>
        <GradientStop Color="#FDCDD1EF"  Offset="0.3870"/>
        <GradientStop Color="#1C55A4" Offset="0.9677"/>
        <GradientStop Color="#4079C7" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="Title" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="{StaticResource Brush_HeaderBackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="SmallerTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Background" Value="{StaticResource Brush_HeaderBackground}"/>
    </Style>

    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent"
                                     RelativeSource="{x:Static RelativeSource.Self}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel  >
                        <TextBlock DockPanel.Dock="Bottom"
                                       HorizontalAlignment="Center"
                                       Foreground="Crimson"
                                       FontSize="10pt"
                                       Text="{Binding AdornedElement.(Validation.Errors).CurrentItem.ErrorContent, ElementName=MyAdorner}"/>
                        <Border BorderBrush="Crimson" BorderThickness="1.5" CornerRadius="2">
                            <AdornedElementPlaceholder x:Name="MyAdorner"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <Style TargetType="{x:Type xctk:WatermarkTextBox }">
        <Setter Property="Margin" Value="3,0,3,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="AutoSelectBehavior" Value="OnFocus"/>
        <Setter Property="AutoMoveFocus" Value="True"/>
        <Setter Property="VerticalAlignment" Value="Center"/>

        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent"
                                     RelativeSource="{x:Static RelativeSource.Self}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--ComboBox--> 
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent"
                                     RelativeSource="{x:Static RelativeSource.Self}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>

            <!--<Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel  >
                        <TextBlock DockPanel.Dock="Top"
                                       HorizontalAlignment="Center"
                                       Foreground="Crimson"
                                       FontSize="10pt"
                                       Text="{Binding AdornedElement.(Validation.Errors).CurrentItem.ErrorContent, ElementName=MyAdorner}"/>
                        <Border BorderBrush="Crimson" BorderThickness="1.5" CornerRadius="2">
                            <AdornedElementPlaceholder x:Name="MyAdorner"/>
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>

    <!-- ProgressBar Brushes -->
    <LinearGradientBrush x:Key="ProgressBarIndicatorBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC6D6EC" Offset="0" />
        <GradientStop Color="#FFBDD6FF" Offset="0.502" />
        <GradientStop Color="#FF71A7FD" Offset="0.522" />
        <GradientStop Color="#FF94BDFD" Offset="0.763" />
        <GradientStop Color="#FFA9CAFF" Offset="1" />
    </LinearGradientBrush>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IndeterminateOn" RepeatBehavior="Forever">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.Fill).(Brush.Transform).(TransformGroup.Children)[0].X" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0" />
                                <SplineDoubleKeyFrame KeyTime="00:00:.5" Value="20" />
                            </DoubleAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border x:Name="PART_Track" BorderThickness="1" CornerRadius="3" Opacity="0.825">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFFFF" />
                                    <GradientStop Color="#FFD8D8D8" Offset="0.327" />
                                    <GradientStop Color="#FFDADADA" Offset="0.488" />
                                    <GradientStop Color="#FFBEBEBE" Offset="0.539" />
                                    <GradientStop Color="#FFD6D6D6" Offset="0.77" />
                                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFBBBBBB" Offset="0" />
                                    <GradientStop Color="#FF7E7E7E" Offset="1" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>

                        <Rectangle x:Name="PART_Indicator" Margin="1" RadiusX="1.5" RadiusY="1.5" HorizontalAlignment="Left" Opacity="0.83" Fill="{DynamicResource ProgressBarIndicatorBrush}"/>
                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                            <Rectangle x:Name="IndeterminateSolidFill" Margin="1" Fill="#FF6EA4FD" RadiusX="2" RadiusY="2" Width="Auto" />
                            <Rectangle x:Name="ProgressBarRootGradient" Margin="1" Panel.ZIndex="1" RadiusX="1.5" RadiusY="1.5">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#F6BCD5FF" Offset="0.046" />
                                        <GradientStop Color="#96D4E4FF" Offset="0.18" />
                                        <GradientStop Color="#4FFFFFFF" Offset="0.512" />
                                        <GradientStop Color="#00D6D6D6" Offset="0.521" />
                                        <GradientStop Color="#BABCD5FF" Offset="1" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="IndeterminateGradientFill" Margin="1" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0.7">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="20,1" MappingMode="Absolute" SpreadMethod="Repeat">
                                        <LinearGradientBrush.Transform>
                                            <TransformGroup>
                                                <TranslateTransform X="0" />
                                                <SkewTransform AngleX="-10" />
                                            </TransformGroup>
                                        </LinearGradientBrush.Transform>
                                        <GradientStop Color="#FFBCD5FF" Offset="0.088" />
                                        <GradientStop Color="#006EA4FD" Offset="0.475" />
                                        <GradientStop Color="#FFBCD5FF" Offset="0.899" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" IsHitTestVisible="false" Background="#A5FFFFFF" BorderBrush="#66FFFFFF" BorderThickness="1" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="1" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IndeterminateOn_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IndeterminateOn_BeginStoryboard" Storyboard="{StaticResource IndeterminateOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="PART_Track" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="PART_Indicator" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style  TargetType="DataGridColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style  TargetType="DataGridRowHeader">

    </Style>

    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Margin" Value="3,0,3,0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="Auto"/>
        
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="True">
                <Setter Property="ToolTip">
                    <Setter.Value>
                        <Binding Path="(Validation.Errors).CurrentItem.ErrorContent"
                                     RelativeSource="{x:Static RelativeSource.Self}"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle" >
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  x:Key="GridSplitterStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <Canvas RenderOptions.EdgeMode="Aliased" UseLayoutRounding="True"
                                Height="6" VerticalAlignment="Center"
                                Width="50" HorizontalAlignment="Center">
                            <Line X1="0" X2="50" Y1="0" Y2="0"
                                  Stroke="White" StrokeThickness="1"/>
                            <Line X1="0" X2="50" Y1="1" Y2="1"
                                  Stroke="#A0A0A0" StrokeThickness="1"/>
                            <Line X1="0" X2="50" Y1="4" Y2="4"
                                  Stroke="White" StrokeThickness="1"/>
                            <Line X1="0" X2="50" Y1="5" Y2="5"
                                  Stroke="#A0A0A0" StrokeThickness="1"/>
                        </Canvas>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="bkgGridSplitter" >
        <GradientStop Color="#E5E5E5" Offset="0"/>
        <GradientStop Color="#E5E5E5" Offset="0.15"/>
        <GradientStop Color="#E5E5E5" Offset="0.8"/>
        <GradientStop Color="#E5E5E5" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="GridSplitterVerticalGripStyle" TargetType="{x:Type GridSplitter}">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background"
                    Value="{StaticResource bkgGridSplitter}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <Border Height="150" Width="4" VerticalAlignment="Center"
                                    HorizontalAlignment="Center" BorderThickness="1 0"
                                    Background="White" BorderBrush="#A0A0A0">
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>